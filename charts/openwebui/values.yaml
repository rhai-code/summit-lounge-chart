# Default values for openwebui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  registry: ghcr.io
  repository: open-webui/open-webui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

configuration:
  env:
    ENABLE_SIGNUP: "false"
    WEBUI_AUTH: "false"
  extraArgs: []
  vllmEndpoint: http://vllm.example.svc:8000/v1
  vllmModel: ibm-granite/granite-3.3-2b-instruct
  vllmToken: ""
  data:
    type: pvc # type can be one of pvc or emptyDir
    size: 5Gi
    emptyDir: {}
    pvc:
      accessModes:
        - ReadWriteOnce

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deploymentStrategy:
  type: RollingUpdate

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials? (overridden if you enable oauth)
  automount: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true

service:
  type: ClusterIP
  port: 8080

route:
  enabled: true
  annotations: {}
  tls:
    enabled: true
    insecureEdgeTerminationPolicy: Redirect
  subdomain: ""
  oauth:
    enabled: true
    sarTemplate: >
      {"namespace": "{{ .Release.Namespace }}", "resource": "secrets", "verb": "get"}

resources:
  limits:
    cpu: 1
    memory: 4Gi
  requests:
    cpu: 200m
    memory: 500Mi

livenessProbe:
  httpGet:
    path: /health
    port: http
  failureThreshold: 1
  periodSeconds: 10
  timeoutSeconds: 3
readinessProbe:
  httpGet:
    path: /health/db
    port: http
  failureThreshold: 1
  periodSeconds: 10
  timeoutSeconds: 3
startupProbe:
  httpGet:
    path: /health
    port: http
  initialDelaySeconds: 5
  failureThreshold: 30
  periodSeconds: 5
  timeoutSeconds: 3

nodeSelector: {}

tolerations: []

affinity: {}
